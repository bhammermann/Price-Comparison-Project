{"version":3,"sources":["app.js","ReadData.js","index.js"],"names":["http","require","fs","path","mimeTypes","app","createServer","request","response","filePath","join","__dirname","url","extname","String","toLowerCase","contentType","readFile","error","content","writeHead","end","code","module","exports","MongoClient","run","uri","dbName","client","connect","db","changeStream","watch","console","log","on","change","operationType","handleInsert","ns","coll","fullDocument","err","collectionName","document","name","preis","config","port","mongo_uri","process","env","MONGO_URI","exit","read","fastify","logger","register","forceClose","engine","ejs","get","req","reply","categories","data","cat","collection","mongo","results","find","sort","_id","limit","toArray","view","listen","host","_process$env$PORT","PORT","address"],"mappings":"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","file":"index.js","sourceRoot":"..\\src","sourcesContent":["const http = require('http');\r\nconst fs = require('fs');\r\nconst path = require('path');\r\n\r\nconst mimeTypes = {\r\n  '.html': 'text/html',\r\n  '.js': 'text/javascript',\r\n  '.css': 'text/css',\r\n  '.json': 'application/json',\r\n  '.png': 'image/png',\r\n  '.jpg': 'image/jpg',\r\n  '.gif': 'image/gif',\r\n  '.wav': 'audio/wav',\r\n  '.mp4': 'video/mp4',\r\n  '.woff': 'application/font-woff',\r\n  '.ttf': 'application/font-ttf',\r\n  '.eot': 'application/vnd.ms-fontobject',\r\n  '.otf': 'application/font-otf',\r\n  '.svg': 'application/image/svg+xml',\r\n};\r\n\r\nconst app = http.createServer((request, response) => {\r\n  let filePath = path.join(__dirname, 'public', request.url);\r\n  if (filePath === path.join(__dirname, 'public', '/')) filePath = path.join(__dirname, 'public', 'index.html');\r\n\r\n  const extname = String(path.extname(filePath)).toLowerCase();\r\n  const contentType = mimeTypes[extname] || 'application/octet-stream';\r\n\r\n  fs.readFile(filePath, (error, content) => {\r\n    if (error) {\r\n      response.writeHead(500);\r\n      response.end(`Sorry, check with the site admin for error: ${error.code} ..\\n`);\r\n      response.end();\r\n    } else {\r\n      response.writeHead(200, { 'Content-Type': contentType });\r\n      response.end(content, 'utf-8');\r\n    }\r\n  });\r\n});\r\n\r\nmodule.exports = app;","const { MongoClient } = require('mongodb');\r\n\r\n\r\nmodule.exports.run = async function run(uri) {\r\n    const dbName = 'Prices'; \r\n    const client = new MongoClient(uri);\r\n    await client.connect();\r\n\r\n    const db = client.db(dbName);\r\n\r\n    // hier werden auf Änderungen in der db geschaut\r\n    const changeStream = db.watch();\r\n    console.log(\"Changestream started\")\r\n\r\n    // Event-Handler für Änderungen in allen Sammlungen\r\n    changeStream.on('change', function(change) {\r\n        //console.log('Änderung in der Datenbank erkannt:');\r\n        //console.log('  Collection:', change.ns.coll); // Ausgabe des Namens der Sammlung, in der die Änderungen aufgetreten sind\r\n        //console.log('  Änderung:', change);\r\n\r\n        switch(change.operationType) {\r\n            case 'insert':\r\n                handleInsert(change.ns.coll, change.fullDocument);\r\n                break;\r\n            default:\r\n                console.log('Änderungstyp nicht unterstützt:', change.operationType);\r\n        }\r\n    });\r\n\r\n    changeStream.on('error', function(err) {\r\n        console.error('Fehler im Change Stream:', err);\r\n    });\r\n\r\n}\r\n\r\n// Funktion zum Behandeln von Einfügungen in verschiedenen Sammlungen\r\nfunction handleInsert(collectionName, document) {\r\n    console.log(`Neue Einträge in Sammlung \"${collectionName}\":`);\r\n    const name = document.name;\r\n    const preis = document.preis;\r\n        \r\n    // logging\r\n    console.log('  Name:', name);\r\n    console.log('  Preis:', preis);\r\n}\r\n","require('dotenv').config()\r\nconst app = require('./app');\r\n\r\nconst port = '8888';\r\nconst mongo_uri = process.env.MONGO_URI;\r\n\r\nif (!mongo_uri) {\r\n    console.log(\"Bitte MONGO_URI setzen.\");\r\n    process.exit(1);\r\n}\r\n\r\nconsole.log(mongo_uri)\r\n\r\nconst read = require('./ReadData')\r\nread.run(mongo_uri);\r\n\r\n// CommonJs\r\nconst fastify = require('fastify')({\r\n  logger: true\r\n});\r\n\r\nfastify.register(require('@fastify/mongodb'), {\r\n    forceClose: true,    \r\n    url: mongo_uri\r\n})\r\n\r\nfastify.register(require(\"@fastify/view\"), {\r\n  engine: {\r\n    ejs: require(\"ejs\"),\r\n  },\r\n});\r\n\r\nfastify.get(\"/\", async (req, reply) => {\r\n    const categories = [\r\n        \"GPU\", \"CPU\", \"Case\", \"Mainboard\", \"PSU\", \"RAM\" \r\n    ]\r\n    const data = {};\r\n\r\n    for (const cat of categories) {\r\n        const collection = fastify.mongo.client.db('Prices').collection(cat);\r\n        const results = await collection.find({}).sort({_id: -1}).limit(5);\r\n        data[cat] = await results.toArray();\r\n    }\r\n\r\n    console.log(data);\r\n       \r\n    return reply.view(\"/templates/index.ejs\", data);\r\n});\r\n\r\nfastify.listen({ host: \"0.0.0.0\", port: process.env.PORT ?? 3000 }, (err, address) => {\r\n    if (err) {\r\n        console.log(\"Failed to start web server.\");\r\n        console.log(err)\r\n        process.exit(1);\r\n    }\r\n    console.log(\"Started webserver at\", address);\r\n})\r\n\r\n// app.listen(port, () => {\r\n//   console.log(`Server is listening on port ${port}...`);\r\n// });\r\n"]}