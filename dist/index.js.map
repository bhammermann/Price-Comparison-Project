{"version":3,"sources":["app.js","mongodb.js","index.js"],"names":["http","require","fs","path","mimeTypes","app","createServer","request","response","filePath","join","__dirname","url","extname","String","toLowerCase","contentType","readFile","error","content","writeHead","end","code","module","exports","MongoClient","uri","process","env","MONGO_URI","client","run","connect","console","log","close","catch","dir","config","port","db"],"mappings":"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","file":"index.js","sourceRoot":"../src","sourcesContent":["const http = require('http');\r\nconst fs = require('fs');\r\nconst path = require('path');\r\n\r\nconst mimeTypes = {\r\n  '.html': 'text/html',\r\n  '.js': 'text/javascript',\r\n  '.css': 'text/css',\r\n  '.json': 'application/json',\r\n  '.png': 'image/png',\r\n  '.jpg': 'image/jpg',\r\n  '.gif': 'image/gif',\r\n  '.wav': 'audio/wav',\r\n  '.mp4': 'video/mp4',\r\n  '.woff': 'application/font-woff',\r\n  '.ttf': 'application/font-ttf',\r\n  '.eot': 'application/vnd.ms-fontobject',\r\n  '.otf': 'application/font-otf',\r\n  '.svg': 'application/image/svg+xml',\r\n};\r\n\r\nconst app = http.createServer((request, response) => {\r\n  let filePath = path.join(__dirname, 'public', request.url);\r\n  if (filePath === path.join(__dirname, 'public', '/')) filePath = path.join(__dirname, 'public', 'index.html');\r\n\r\n  const extname = String(path.extname(filePath)).toLowerCase();\r\n  const contentType = mimeTypes[extname] || 'application/octet-stream';\r\n\r\n  fs.readFile(filePath, (error, content) => {\r\n    if (error) {\r\n      response.writeHead(500);\r\n      response.end(`Sorry, check with the site admin for error: ${error.code} ..\\n`);\r\n      response.end();\r\n    } else {\r\n      response.writeHead(200, { 'Content-Type': contentType });\r\n      response.end(content, 'utf-8');\r\n    }\r\n  });\r\n});\r\n\r\nmodule.exports = app;","const { MongoClient } = require(\"mongodb\");\n\nlet uri = process.env.MONGO_URI;\n\nconst client = new MongoClient(uri);\n\nasync function run() {\n  try {\n    await client.connect();\n    console.log(\"Connected\");\n  } finally {\n    await client.close();\n  }\n}\nrun().catch(console.dir);\n","require('dotenv').config()\r\nconst app = require('./app');\r\n\r\nconst port = '8888';\r\n\r\nconst db = require('./mongodb')\r\n\r\n// app.listen(port, () => {\r\n//   console.log(`Server is listening on port ${port}...`);\r\n// });"]}